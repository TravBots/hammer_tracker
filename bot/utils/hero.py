import discord


def get_hero_items(url):
    error = 0xB22222 # noqa: F841
    success = 0x207325

    hero_items_string = url[92:]

    hero_item_postions = {2: 2, 11: 1, 14: 2, 18: 2, 22: 2, 26: 2}

    hero_items_dict = {
        "1": "T1: Helmet of Awareness",
        "2": "T2: Helmet of Enlightenment",
        "3": "T3: Helmet of Wisdom",
        "4": "T1: Helmet of Regeneration",
        "5": "T2: Helmet of Health",
        "6": "T3: Helmet of Healing",
        "7": "T1: Helmet of the Gladiator",
        "8": "T2: Helmet of the Tribune",
        "9": "T3: Helmet of the Consul",
        "A": "T1: Helmet of the Horseman",
        "B": "T2: Helmet of the Cavalry",
        "C": "T3: Helmet of the Heavy cavalry",
        "D": "T1: Helmet of the Mercenary",
        "E": "T2: Helmet of the Warrior",
        "F": "T3: Helmet of the Archon",
        "10": "T1: Short sword of the Legionnaire",
        "11": "T2: Sword of the Legionnaire",
        "12": "T3: Long sword of the Legionnaire",
        "13": "T1: Short sword of the Praetorian",
        "14": "T2: Sword of the Praetorian",
        "15": "T3: Long sword of the Praetorian",
        "16": "T1: Short sword of the Imperian",
        "17": "T2: Sword of the Imperian",
        "18": "T3: Long sword of the Imperian",
        "19": "T1: Short sword of the Imperatoris",
        "1A": "T2: Sword of the Imperatoris",
        "1B": "T3: Long sword of the Imperatoris",
        "1C": "T1: Light lance of the Caesaris",
        "1D": "T2: Lance of the Caesaris",
        "1E": "T3: Heavy lance of the Caesaris",
        "1F": "T1: Spear of the Phalanx",
        "20": "T2: Pike of the Phalanx",
        "21": "T3: Lance of the Phalanx",
        "22": "T1: Short sword of the Swordsman",
        "23": "T2: Sword of the Swordsman",
        "24": "T3: Long sword of the Swordsman",
        "25": "T1: Short-bow of the Theutates",
        "26": "T2: Bow of the Theutates",
        "27": "T3: Long-bow of the Theutates",
        "28": "T1: Staff of the Druidrider",
        "29": "T2: Great staff of the Druidrider",
        "2A": "T3: Fighting-staff of the Druidrider",
        "2B": "T1: Light lance of the Haeduan",
        "2C": "T2: Lance of the Haeduan",
        "2D": "T3: Heavy lance of the Haeduan",
        "2E": "T1: Club of the Clubswinger",
        "2F": "T2: Mace of the Clubswinger",
        "30": "T3: Morning star of the Clubswinger",
        "31": "T1: Spear of the Spearman",
        "32": "T2: Spike of the Spearman",
        "33": "T3: Lance of the Spearman",
        "34": "T1: Hatchet of the Axeman",
        "35": "T2: Axe of the Axeman",
        "36": "T3: Battle axe of the Axeman",
        "37": "T1: Light hammer of the Paladin",
        "38": "T2: Hammer of the Paladin",
        "39": "T3: Heavy hammer of the Paladin",
        "3A": "T1: Short sword of the Teutonic Knight",
        "3B": "T2: Sword of the Teutonic Knight",
        "3C": "T3: Long sword of the Teutonic Knight",
        "73": "T1: Club of the Slave Militia",
        "74": "T2: Mace of the Slave Militia",
        "75": "T3: Morning Star of the Slave Militia",
        "76": "T1: Hatchet of the Ash Warden",
        "77": "T2: Axe of the Ash Warden",
        "78": "T3: Battle Axe of the Ash Warden",
        "79": "T1: Short Khopesh of the Warrior",
        "7A": "T2: Khopesh of the Warrior",
        "7B": "T3: Long Khopesh of the Warrior",
        "7C": "T1: Spear of the Anhor Guard",
        "7D": "T2: Spear of the Anhor Guard",
        "7E": "T3: Lance of the Anhor Guard",
        "7F": "T1: Short Bow of the Resheph Chariot",
        "80": "T2: Bow of the Resheph Chariot",
        "81": "T3: Long Bow of the Resheph Chariot",
        "82": "T1: Hatchet of the Mercenary",
        "83": "T2: Axe of the Mercenary",
        "84": "T3: Battle Axe of the Mercenary",
        "85": "T1: Composite Short Bow of the Bowman",
        "86": "T2: Composite Bow of the Bowman",
        "87": "T3: Composite Long Bow of the Bowman",
        "88": "T1: Short Spatha Sword of the Steppe Rider",
        "89": "T2: Spatha Sword of the Steppe Rider",
        "8A": "T3: Long Spatha Sword of the Steppe Rider",
        "8B": "T1: Composite Short Bow of the Marksman",
        "8C": "T2: Composite Bow of the Marksman",
        "8D": "T3: Composite Long Bow of the Marksman",
        "8E": "T1: Short Spatha Sword of the Marauder",
        "8F": "T2: Spatha Sword of the Marauder",
        "90": "T3: Long Spatha Sword of the Marauder",
        "3D": "T1: Small Map",
        "3E": "T2: Map",
        "3F": "T3: Large Map",
        "40": "T1: Small Pennant",
        "41": "T2: Pennant",
        "42": "T3: Great Pennant",
        "43": "T1: Small Standard",
        "44": "T2: Standard",
        "45": "T3: Great Standard",
        "49": "T1: Pouch of the thief",
        "4A": "T2: Bag of the thief",
        "4B": "T3: Sack of the thief",
        "4C": "T1: Small shield",
        "4D": "T2: Shield",
        "4E": "T3: Large shield",
        "4F": "T1: Small horn of the Natarian",
        "50": "T2: Horn of the Natarian",
        "51": "T3: Large horn of the Natarian",
        "52": "T1: Light armour of Regeneration",
        "53": "T2: Armour of Regeneration",
        "54": "T3: Heavy armour of Regeneration",
        "55": "T1: Light scale armour",
        "56": "T2: Scale armour",
        "57": "T3: Heavy scale armour",
        "58": "T1: Light breastplate",
        "59": "T2: Breastplate",
        "5A": "T3: Heavy breastplate",
        "5B": "T1: Light segmented armour",
        "5C": "T2: Segmented armour",
        "5D": "T3: Heavy segmented armour",
        "5E": "T1: Boots of Regeneration",
        "5F": "T2: Boots of Healthiness",
        "60": "T3: Boots of Healing",
        "61": "T1: Boots of the Mercenary",
        "62": "T2: Boots of the Warrior",
        "63": "T3: Boots of the Archon",
        "64": "T1: Small spurs",
        "65": "T2: Spurs",
        "66": "T3: Nasty spurs",
        "67": "T1: Gelding",
        "68": "T2: Thoroughbred",
        "69": "T3: Warhorse",
    }

    items = ""
    for k, v in hero_item_postions.items():
        try:
            items += hero_items_dict[hero_items_string[k : k + v].upper()]
            items += "\n"
        except KeyError:
            pass

    embed = discord.Embed(color=success)
    embed.add_field(name="Hero Items", value=items)

    return embed
